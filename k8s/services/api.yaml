apiVersion: v1
kind: Service
metadata:
  name: ngx-api
  namespace: ngx-agents
  labels:
    app: ngx-api
    component: api
  annotations:
    cloud.google.com/neg: '{"ingress": true}'
    cloud.google.com/backend-config: '{"default": "ngx-api-backend-config"}'
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: 8000
      protocol: TCP
      name: http
  selector:
    app: ngx-api
    component: api
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ngx-api
  namespace: ngx-agents
  labels:
    app: ngx-api
    component: api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: ngx-api
      component: api
  template:
    metadata:
      labels:
        app: ngx-api
        component: api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: ngx-agents-sa
      containers:
      - name: api
        image: gcr.io/PROJECT_ID/ngx-agents-api:latest # TODO: Replace PROJECT_ID
        imagePullPolicy: Always
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        - containerPort: 8001
          name: metrics
          protocol: TCP
        env:
        - name: HOST
          value: "0.0.0.0"
        - name: PORT
          value: "8000"
        - name: GOOGLE_APPLICATION_CREDENTIALS
          value: "/var/secrets/gcp/gcp-key.json"
        envFrom:
        - configMapRef:
            name: ngx-agents-config
        - configMapRef:
            name: ngx-agents-env
        - secretRef:
            name: ngx-agents-secrets
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        volumeMounts:
        - name: gcp-credentials
          mountPath: /var/secrets/gcp
          readOnly: true
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
      volumes:
      - name: gcp-credentials
        secret:
          secretName: gcp-credentials
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ngx-api
              topologyKey: kubernetes.io/hostname
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: ngx-api-hpa
  namespace: ngx-agents
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: ngx-api
  minReplicas: 3
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 10
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: ngx-api-backend-config
  namespace: ngx-agents
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 8000
    type: HTTP
    requestPath: /health
  sessionAffinity:
    affinityType: "CLIENT_IP"
    affinityCookieTtlSec: 3600
  timeoutSec: 300
  connectionDraining:
    drainingTimeoutSec: 60