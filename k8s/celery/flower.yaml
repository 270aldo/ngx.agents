apiVersion: v1
kind: Service
metadata:
  name: flower
  namespace: ngx-agents
  labels:
    app: flower
    component: monitoring
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 5555
      protocol: TCP
      name: http
  selector:
    app: flower
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flower
  namespace: ngx-agents
  labels:
    app: flower
    component: monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: flower
  template:
    metadata:
      labels:
        app: flower
        component: monitoring
    spec:
      serviceAccountName: ngx-agents-sa
      containers:
      - name: flower
        image: mher/flower:2.0
        command: ["celery"]
        args:
          - "flower"
          - "--broker=amqp://$(RABBITMQ_USER):$(RABBITMQ_PASS)@rabbitmq:5672/"
          - "--port=5555"
          - "--basic_auth=$(FLOWER_USER):$(FLOWER_PASSWORD)"
          - "--url_prefix=flower"
        ports:
        - containerPort: 5555
          name: http
        env:
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: user
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: password
        - name: FLOWER_USER
          valueFrom:
            secretKeyRef:
              name: flower-secret
              key: user
        - name: FLOWER_PASSWORD
          valueFrom:
            secretKeyRef:
              name: flower-secret
              key: password
        - name: CELERY_BROKER_URL
          value: "amqp://$(RABBITMQ_USER):$(RABBITMQ_PASS)@rabbitmq:5672/"
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /flower/healthcheck
            port: 5555
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /flower/healthcheck
            port: 5555
          initialDelaySeconds: 10
          periodSeconds: 10
---
apiVersion: v1
kind: Secret
metadata:
  name: flower-secret
  namespace: ngx-agents
type: Opaque
stringData:
  user: admin
  password: ngx-flower-secure-password-2025
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: flower-ingress
  namespace: ngx-agents
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: flower-basic-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Flower'
spec:
  tls:
  - hosts:
    - flower.ngx-agents.com
    secretName: flower-tls
  rules:
  - host: flower.ngx-agents.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: flower
            port:
              number: 80
---
# Basic auth secret for additional Ingress protection
apiVersion: v1
kind: Secret
metadata:
  name: flower-basic-auth
  namespace: ngx-agents
type: Opaque
data:
  # Generated with: htpasswd -nb admin password | base64
  # Default: admin:ngx-flower-2025
  auth: YWRtaW46JGFwcjEkdkQ4UlFXNEIkU3RvVjNnY0t5VGFQcDhMVnhKUXBEMAo=