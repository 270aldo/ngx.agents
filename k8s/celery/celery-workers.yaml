apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-default
  namespace: ngx-agents
  labels:
    app: celery-worker
    queue: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: celery-worker
      queue: default
  template:
    metadata:
      labels:
        app: celery-worker
        queue: default
    spec:
      serviceAccountName: ngx-agents-sa
      containers:
      - name: celery-worker
        image: gcr.io/agentes-ngx/ngx-agents:latest
        command: ["celery", "-A", "core.celery_app", "worker"]
        args: 
          - "--loglevel=info"
          - "--queues=default"
          - "--concurrency=4"
          - "--hostname=worker-default@%h"
        env:
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: user
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: password
        - name: REDIS_HOST
          value: "redis-master"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        envFrom:
        - configMapRef:
            name: ngx-agents-config
        - secretRef:
            name: ngx-agents-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        volumeMounts:
        - name: gcp-credentials
          mountPath: /secrets/gcp
          readOnly: true
      volumes:
      - name: gcp-credentials
        secret:
          secretName: gcp-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-high-priority
  namespace: ngx-agents
  labels:
    app: celery-worker
    queue: high-priority
spec:
  replicas: 2
  selector:
    matchLabels:
      app: celery-worker
      queue: high-priority
  template:
    metadata:
      labels:
        app: celery-worker
        queue: high-priority
    spec:
      serviceAccountName: ngx-agents-sa
      containers:
      - name: celery-worker
        image: gcr.io/agentes-ngx/ngx-agents:latest
        command: ["celery", "-A", "core.celery_app", "worker"]
        args: 
          - "--loglevel=info"
          - "--queues=high_priority"
          - "--concurrency=2"
          - "--hostname=worker-high@%h"
        env:
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: user
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: password
        - name: REDIS_HOST
          value: "redis-master"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        envFrom:
        - configMapRef:
            name: ngx-agents-config
        - secretRef:
            name: ngx-agents-secrets
        resources:
          requests:
            memory: "1Gi"
            cpu: "1000m"
          limits:
            memory: "2Gi"
            cpu: "2000m"
        volumeMounts:
        - name: gcp-credentials
          mountPath: /secrets/gcp
          readOnly: true
      volumes:
      - name: gcp-credentials
        secret:
          secretName: gcp-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-reports
  namespace: ngx-agents
  labels:
    app: celery-worker
    queue: reports
spec:
  replicas: 2
  selector:
    matchLabels:
      app: celery-worker
      queue: reports
  template:
    metadata:
      labels:
        app: celery-worker
        queue: reports
    spec:
      serviceAccountName: ngx-agents-sa
      containers:
      - name: celery-worker
        image: gcr.io/agentes-ngx/ngx-agents:latest
        command: ["celery", "-A", "core.celery_app", "worker"]
        args: 
          - "--loglevel=info"
          - "--queues=reports"
          - "--concurrency=2"
          - "--hostname=worker-reports@%h"
        env:
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: user
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: password
        - name: REDIS_HOST
          value: "redis-master"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        envFrom:
        - configMapRef:
            name: ngx-agents-config
        - secretRef:
            name: ngx-agents-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "500m"
          limits:
            memory: "4Gi"
            cpu: "1000m"
        volumeMounts:
        - name: gcp-credentials
          mountPath: /secrets/gcp
          readOnly: true
      volumes:
      - name: gcp-credentials
        secret:
          secretName: gcp-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-images
  namespace: ngx-agents
  labels:
    app: celery-worker
    queue: images
spec:
  replicas: 3
  selector:
    matchLabels:
      app: celery-worker
      queue: images
  template:
    metadata:
      labels:
        app: celery-worker
        queue: images
    spec:
      serviceAccountName: ngx-agents-sa
      containers:
      - name: celery-worker
        image: gcr.io/agentes-ngx/ngx-agents:latest
        command: ["celery", "-A", "core.celery_app", "worker"]
        args: 
          - "--loglevel=info"
          - "--queues=images"
          - "--concurrency=3"
          - "--hostname=worker-images@%h"
        env:
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: user
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: password
        - name: REDIS_HOST
          value: "redis-master"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        envFrom:
        - configMapRef:
            name: ngx-agents-config
        - secretRef:
            name: ngx-agents-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: gcp-credentials
          mountPath: /secrets/gcp
          readOnly: true
      volumes:
      - name: gcp-credentials
        secret:
          secretName: gcp-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-worker-analytics
  namespace: ngx-agents
  labels:
    app: celery-worker
    queue: analytics
spec:
  replicas: 2
  selector:
    matchLabels:
      app: celery-worker
      queue: analytics
  template:
    metadata:
      labels:
        app: celery-worker
        queue: analytics
    spec:
      serviceAccountName: ngx-agents-sa
      containers:
      - name: celery-worker
        image: gcr.io/agentes-ngx/ngx-agents:latest
        command: ["celery", "-A", "core.celery_app", "worker"]
        args: 
          - "--loglevel=info"
          - "--queues=analytics"
          - "--concurrency=2"
          - "--hostname=worker-analytics@%h"
        env:
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: user
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: password
        - name: REDIS_HOST
          value: "redis-master"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        envFrom:
        - configMapRef:
            name: ngx-agents-config
        - secretRef:
            name: ngx-agents-secrets
        resources:
          requests:
            memory: "2Gi"
            cpu: "1000m"
          limits:
            memory: "4Gi"
            cpu: "2000m"
        volumeMounts:
        - name: gcp-credentials
          mountPath: /secrets/gcp
          readOnly: true
      volumes:
      - name: gcp-credentials
        secret:
          secretName: gcp-credentials
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery-beat
  namespace: ngx-agents
  labels:
    app: celery-beat
spec:
  replicas: 1  # Only one beat scheduler should run
  selector:
    matchLabels:
      app: celery-beat
  template:
    metadata:
      labels:
        app: celery-beat
    spec:
      serviceAccountName: ngx-agents-sa
      containers:
      - name: celery-beat
        image: gcr.io/agentes-ngx/ngx-agents:latest
        command: ["celery", "-A", "core.celery_app", "beat"]
        args: ["--loglevel=info"]
        env:
        - name: RABBITMQ_HOST
          value: "rabbitmq"
        - name: RABBITMQ_PORT
          value: "5672"
        - name: RABBITMQ_USER
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: user
        - name: RABBITMQ_PASS
          valueFrom:
            secretKeyRef:
              name: rabbitmq-secret
              key: password
        - name: REDIS_HOST
          value: "redis-master"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-secret
              key: password
        envFrom:
        - configMapRef:
            name: ngx-agents-config
        - secretRef:
            name: ngx-agents-secrets
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        volumeMounts:
        - name: gcp-credentials
          mountPath: /secrets/gcp
          readOnly: true
        - name: celerybeat-schedule
          mountPath: /app/celerybeat-schedule
      volumes:
      - name: gcp-credentials
        secret:
          secretName: gcp-credentials
      - name: celerybeat-schedule
        persistentVolumeClaim:
          claimName: celerybeat-schedule-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: celerybeat-schedule-pvc
  namespace: ngx-agents
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  storageClassName: standard-rwo